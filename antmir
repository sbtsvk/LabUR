CREATE DATABASE Tiendanline;

USE Tiendanline;

CREATE TABLE Cliente
(
    idCliente INT(11) NOT NULL AUTO_INCREMENT,
    nombreCliente VARCHAR(15),
    apellidoCliente VARCHAR(15),
    fechaNacimiento DATE,
    PRIMARY KEY (idCliente)
);

CREATE TABLE Producto
(
    idProducto INT NOT NULL AUTO_INCREMENT UNIQUE,
    codigoBarras VARCHAR(25),
    nombreProducto VARCHAR(50),
    Marca VARCHAR(15),
    Precio DECIMAL(17,2),
    PRIMARY KEY (codigoBarras)
);

CREATE TABLE Usuario
(
    idUsuario INT(11) NOT NULL AUTO_INCREMENT,
    rolUsuario ENUM('Empleado','Admin'),
    nombreUsuario VARCHAR(15),
    apellidoUsuario VARCHAR(15),
    PRIMARY KEY(idUsuario)
);

CREATE TABLE Venta
(
    idVenta INT(11) NOT NULL AUTO_INCREMENT,
    fechaVenta DATE,
    idUsuarioFK INT(11) NOT NULL,
    idClienteFK INT(11) NOT NULL,
    PRIMARY KEY(idVenta),
    FOREIGN KEY(idUsuarioFK) REFERENCES Usuario(idUsuario),
    FOREIGN KEY(idClienteFK) REFERENCES Cliente(idCliente)
);

CREATE TABLE Producto_Venta
(
    idVentaFK INT(11) NOT NULL,
    codigoBarrasFK VARCHAR(25) NOT NULL,
    Cantidad INT(5),
    Total DECIMAL(19,2),
    FOREIGN KEY(idVentaFK) REFERENCES Venta(idVenta),
    FOREIGN KEY(codigoBarrasFK) REFERENCES Producto(codigoBarras)
);
INSERT INTO Cliente(nombreCliente, apellidoCliente, fechaNacimiento) VALUES
('Amelia','Sabi','2005-06-25'),
('Antonio','Atala','2005-06-25'),
('Thomas','Neira','2005-09-04'),
('Caren','Rincón','2005-05-08'),
('John','Petrucci','1967-07-12'),
('John','Myung','1967-01-24'),
('Jane','Doe','2000-01-01');

INSERT INTO Producto(codigoBarras, nombreProducto, Marca, Precio) VALUES
('191181716','Teclado K65 Mini','Corsair',600000.00),
('192637465','Mouse G203','Logitec',190000.00),
('111111111','Deskmat','Razer',70000.00),
('191919191','Tortuga Cerámica','Céramimax',15000.00);

INSERT INTO Usuario(rolUsuario, nombreUsuario, apellidoUsuario) VALUES
('Empleado','Bob','Dale'),
('Admin','Chad','Chadus'),
('Empleado','Tom','Apostol'),
('Admin','Gust','lord');

INSERT INTO Venta(fechaVenta, idUsuarioFK, idClienteFK) VALUES
('2024-01-01',1,1),
('2024-01-04',2,1),
('2024-01-01',2,1),
('2024-01-04',3,2),
('2024-01-01',3,2),
('2024-01-02',1,1),
('2024-01-03',4,4),
('2024-01-03',4,2),
('2024-01-03',4,3),
('2024-01-03',4,3);

-- Inserción en Producto_Venta con cálculo del total
INSERT INTO Producto_Venta (idVentaFK, codigoBarrasFK, Cantidad, Total) 
VALUES (1, '191919191', 5, (SELECT Precio FROM Producto WHERE codigoBarras = '191919191') * 5),
       (2, '192637465', 2, (SELECT Precio FROM Producto WHERE codigoBarras = '192637465') * 2),
       (4, '192637465', 2, (SELECT Precio FROM Producto WHERE codigoBarras = '192637465') * 2);
-- Consultar Cliente de la Máxima Venta
SELECT nombreCliente AS 'Cliente', MAX(Total) AS 'Máximo precio Total' 
FROM (Cliente 
      INNER JOIN Venta ON idCliente = idClienteFK) 
      INNER JOIN Producto_Venta ON idVenta = idVentaFK;

-- Consultar el Cliente y Usuario de una venta específica
SELECT nombreCliente AS 'Cliente', apellidoUsuario AS 'Vendedor', idVenta 
FROM Cliente, Usuario, Venta 
WHERE idCliente = idClienteFK AND idUsuario = idUsuarioFK 
ORDER BY idVenta ASC;

-- Consultar productos comprados por un cliente específico
SELECT nombreCliente, nombreProducto, Total 
FROM (Venta 
      INNER JOIN Cliente ON idCliente = idClienteFK) 
      INNER JOIN (Producto_Venta 
                  INNER JOIN Producto ON codigoBarras = codigoBarrasFK) 
      ON idVenta = idVentaFK;

-- Consultar todos los Clientes que han comprado alguna vez
SELECT DISTINCT nombreCliente AS 'Cliente' 
FROM Cliente 
INNER JOIN Venta ON idCliente = idClienteFK;
DELIMITER //
CREATE PROCEDURE registrarproducto(
    IN idProducto INT,
    IN codigoBarras VARCHAR(25),
    IN nombreProducto VARCHAR(50),
    IN Marca VARCHAR(15),
    IN Precio DECIMAL(17,2)
)
BEGIN
    INSERT INTO Producto (codigoBarras, nombreProducto, Marca, Precio) 
    VALUES (codigoBarras, nombreProducto, Marca, Precio);
END //
DELIMITER ;

ALTER TABLE Cliente ADD COLUMN activo TINYINT(1) DEFAULT 1;

DELIMITER //
CREATE PROCEDURE inactivarCliente(
    IN idClienteParam INT
)
BEGIN
    UPDATE Cliente
    SET activo = 0
    WHERE idCliente = idClienteParam;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE consultarProductos()
BEGIN
    SELECT * FROM Producto;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE modificarFechaNacimiento(
    IN idClienteParam INT,
    IN nuevaFecha DATE
)
BEGIN
    UPDATE Cliente
    SET fechaNacimiento = nuevaFecha
    WHERE idCliente = idClienteParam;
END //
DELIMITER ;

CREATE VIEW Vista_Cliente_Producto_Venta AS
SELECT C.nombreCliente, C.apellidoCliente, P.nombreProducto, V.idVenta
FROM Cliente C
INNER JOIN Venta V ON C.idCliente = V.idClienteFK
INNER JOIN Producto_Venta PV ON V.idVenta = PV.idVentaFK
INNER JOIN Producto P ON PV.codigoBarrasFK = P.codigoBarras;

CREATE VIEW Vista_Cliente_Mas_Compras AS
SELECT C.nombreCliente, C.apellidoCliente, COUNT(V.idVenta) AS TotalCompras
FROM Cliente C
INNER JOIN Venta V ON C.idCliente = V.idClienteFK
GROUP BY C.idCliente
ORDER BY TotalCompras DESC
LIMIT 1;

